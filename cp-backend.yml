---
- name: Staging server Deployment
  hosts: stageserver
  become_user: root
  become: True
  vars:
    dest_path: home/crpdev/projects/content-portal/{{DOCKER_TAG}}
    installtion_path: home/crpdev/projects/content-portal/{{DOCKER_TAG}}/content-portal
  tasks:
    #Create a Directory
    - name: create directory
      file:
        state: directory
        dest: "{{ dest_path }}"
    #Copy Files
    - name: Copy website to the host
      copy:
        src: ./
        dest: "{{ dest_path }}"
	- name: Install update packages
      apt:
        name: update
        state: present	
	- name: Install nginx server
      apt:
        name: nginx
        state: present
    # Install NodeJS library
    # using multiple shell commands
    - name: Install Nodejs & ExpressJS
      shell: 'curl -sL https://deb.nodesource.com/setup_18.x -o /tmp/nodesource_setup.sh'
    # If other package are required mention the package name in "name"
    # eg: ngix, curl, wget, apache2, nodejs
    - name: Install reqired packages
      apt:
        name: nodejs
        state: present
    # npm module installation
    #- name: Npm installation
    #  apt:
    #    name: npm
    #    state: present
    # Install all the necessary Node modules for the project,using `npm`.
    - name: Install project dependencies 
      command: npm install
      args:
        chdir: "{{ installtion_path }}"
    # Npm build process
    - name: Build the Code
      command: npm run build
      args:
        chdir: "{{ installtion_path }}"
    # Install Forever tool.
    # This tool is used to run the Node server in background
    # and keep tracking of the running process
    - name: npm install pm2@latest -g
      npm: name=pm2 global=yes state=present
    # is already running (avoids restarting the service on each playbook
    # execution)
    - name: Get Forever's list of running processes
      command: pm2 status
      register: pm2_status
      changed_when: false
    # command: pm2 start --name React_Pipeline_Frontend npm -- start
    # command: pm2 start --name dashboard npm -- start
    # Start the node server using "Foverer"
    # The `when` clause identifies if the server is already
    # running. If so, this task is skipped
    - name: Kill pm2 service
      command: pm2 kill
    - name: Start service
      command: pm2 start npm --name "{{DOCKER_TAG}}-Service" -- start
      args:
        chdir: "{{ installtion_path }}"
